<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">

       <!--前置增强-->
       <bean id="greetingBefore" class="cn.zsza.dailyTest.spring4.springAop.demo1.GreetingBeforeAdvice"/>
       <!--后置增强-->
       <bean id="greetingAfter" class="cn.zsza.dailyTest.spring4.springAop.demo1.GreetingAfterAdvice"/>
       <!--环绕增强-->
       <bean id="greetingAround" class="cn.zsza.dailyTest.spring4.springAop.demo1.GreetingInterceptor"/>
       <!--目标类-->
       <bean id="target" class="cn.zsza.dailyTest.spring4.springAop.demo1.NaiveWaiter"/>

       <!--
         下面两种方式配置都可以,对于proxyInterfaces和interceptorNames两个属性,在存在多个时,用逗号分隔
         bean的属性proxyTargetClass:是否对类进行代理(而不是对接口进行代理).当设置为true时,使用CGLib动态代理
         将其设置为true后,无须再设置proxyInterfaces属性,即使设置也会被ProxyFactoryBean忽略
       -->
       <bean id="waiter" class="org.springframework.aop.framework.ProxyFactoryBean"

             p:proxyInterfaces="cn.zsza.dailyTest.spring4.springAop.demo1.Waiter,cn.zsza.dailyTest.spring4.springAop.demo1.Waitress"
             p:interceptorNames="greetingBefore"
             p:target-ref="target"
             p:proxyTargetClass="true"

       />
</beans>